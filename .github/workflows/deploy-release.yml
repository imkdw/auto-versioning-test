name: 릴리즈

on:
  pull_request:
    branches:
      - main
    types: [closed]

permissions: write-all

jobs:
  prepare-release:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Git 설정
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: 최신 버전 조회
        id: get_version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_OUTPUT

      - name: 릴리즈 브랜치 및 태그 생성
        id: version
        run: |
          # KST 시간으로 버전 생성
          NEXT_VERSION=$(TZ='Asia/Seoul' date +'%Y.%m.%d-%H%M')
          echo "NEXT_VERSION=${NEXT_VERSION}" >> $GITHUB_OUTPUT

          # release 브랜치 생성
          git checkout -b releases/${NEXT_VERSION}

          # 버전 태그 생성
          git tag v${NEXT_VERSION}

          # 변경사항 push
          git push origin releases/${NEXT_VERSION}
          git push origin v${NEXT_VERSION}

      - name: 체인지로그 생성
        id: changelog
        run: |
          CHANGELOG=$(git log -1 --pretty=%B ${{ github.event.pull_request.merge_commit_sha }})
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 릴리즈 생성
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.NEXT_VERSION }}
          release_name: v${{ steps.version.outputs.NEXT_VERSION }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false

      - name: API 배포
        if: contains(github.event.pull_request.labels.*.name, 'deploy-all') || contains(github.event.pull_request.labels.*.name, 'deploy-api')
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: "API 배포"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 웹 배포
        if: contains(github.event.pull_request.labels.*.name, 'deploy-all') || contains(github.event.pull_request.labels.*.name, 'deploy-web')
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: "웹 배포"
          token: ${{ secrets.GITHUB_TOKEN }}
